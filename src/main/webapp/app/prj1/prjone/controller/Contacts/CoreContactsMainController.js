Ext.define('Buzzor.prj1.prjone.controller.Contacts.CoreContactsMainController',{extend : 'Ext.app.ViewController',alias : 'controller.CoreContactsMainController',init : function(){this.renderTreeData();},addCommunicationLog : function(response,  success, daoInfo) {try{if (success) {var responseData = Ext.JSON.decode(response.responseText);}if(daoInfo == null){responseObj = {name : '',status : response.status,statusText : response.statusText,success : success,message : success ? responseData.response.message : 'Failed'};}else{responseObj = {name : (daoInfo.fieldLabel != null)? daoInfo.fieldLabel: daoInfo.title,status : response.status,statusText : response.statusText,success : success,message : success ? responseData.response.message : 'Failed'};}this.view.communicationLog.push(responseObj);} catch(addCommunicationLogException){}},renderTreeData :  function(){var formPanel = this.getView().down("#CoreContacts");var url = formPanel.restURL;var scope = this;var me = this;Ext.Ajax.request({url : 'secure'+url+'/findAll',method:'GET', sender:scope,jsonData :{},success : function(response,scope){var jsonRespone = Ext.JSON.decode(response.responseText);var data = jsonRespone.response.data;var currentView =  scope.sender.getView();var tree = currentView.down("#CoreContactsTree");var rootNode = tree.getRootNode();rootNode.removeAll();for (var int = 0; int < data.length; int++) {var childNode = { text:data[int].primaryDisplay, bConfig:data[int], leaf : true, icon:'images/table_icon.png' };rootNode.appendChild(childNode);}tree.getStore().sort('text','ASC');CoreContactsMainControllerGrid = me.view.down('#CoreContactsGrid').controller;CoreContactsMainControllerGrid.setData(data);var daoInfo = scope.sender.view.down('#CoreContactsTree');scope.sender.addCommunicationLog(response, true, daoInfo);},failure : function(response, scope){var daoInfo = scope.sender.view.down('#CoreContactsTree');scope.sender.addCommunicationLog(response, false, daoInfo);}},scope);},treeClick : function( me, record, item, index, e, eOpts ){if (record.data.leaf) {var CoreContactsGrid = this.view.down('#CoreContactsGrid');var foundRecord = CoreContactsGrid.store.findRecord('primaryKey',record.data.bConfig.primaryKey);CoreContactsGrid.setSelection(foundRecord);}var formPanel = this.getView().down("#CoreContacts");var vm = formPanel.getViewModel();var data = record.data.bConfig;vm.setData(data);CommunicationDataGridGrid = this.view.up().down('#CommunicationDataGrid');CommunicationDataGridStore = CommunicationDataGridGrid.getStore();CommunicationDataGridStore.clearData();CommunicationDataGridRec = record.data.bConfig.communicationData;CommunicationDataGridStore.setRecords(CommunicationDataGridRec);CommunicationDataGridGrid.setSelection(0);AddressGridGrid = this.view.up().down('#AddressGrid');AddressGridStore = AddressGridGrid.getStore();AddressGridStore.clearData();AddressGridRec = record.data.bConfig.address;AddressGridStore.setRecords(AddressGridRec);AddressGridGrid.setSelection(0);}});